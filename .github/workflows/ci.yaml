name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  ALPHA_ENV: "ci"
  DATABASE_URL: "postgres://ci:ci@localhost:5432/ci?sslmode=disable"
  PIPENV_VENV_IN_PROJECT: "1"
  PYTHONPATH: "src"
  TEST_BROWSER: "firefox"
  TEST_SERVICE_URL: "http://localhost:8000"

jobs:
  full-build-and-qa:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: ci
          POSTGRES_USER: ci
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-retries 5
          --health-timeout 5s
    steps:
      - name: pull code from repo
        uses: actions/checkout@v2
      - name: set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: set up pipenv
        run: pip install pipenv
      - name: init virtualenv
        run: |
          mkdir -p .venv
          pipenv --three
      - name: cache packages
        id: venv-packages-cache
        uses: actions/cache@v2
        with:
          path: ./.venv/
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
      - name: install packages
        if: ${{ !steps.venv-packages-cache.outputs.cache-hit }}
        run: make venv-dev
      - name: cache selenium
        id: selenium-cache
        uses: actions/cache@v2
        with:
          path: ./.venv/
          key: ${{ runner.os }}-selenium-${{ hashFiles('config/selenium.link') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-${{ hashFiles('config/selenium.link') }}
      - name: install selenium
        if: ${{ !steps.selenium-cache.outputs.cache-hit }}
        run: |
          test -f selenium.jar || curl -O $(cat config/selenium.link)
          mv selenium-*.jar selenium.jar || exit 0
          test -f selenium.jar
      - name: perform release steps
        env:
          PGPASSFILE: config/.pgpass
        run: |
          chmod 0600 config/.pgpass
          make initdb release
      - name: run production web server
        run: make run-prod &
      - name: run selenium
        run: |
          test -d .test_artifacts || mkdir .test_artifacts
          java -jar selenium.jar -log .test_artifacts/selenium.log &
      - name: release
        run: make release
      - name: tests
        run: make test
